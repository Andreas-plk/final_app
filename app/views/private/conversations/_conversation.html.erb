<% @recipient = private_conv_recipient(conversation) %>
<% @is_messenger = false %>
<li class="conversation-window" 
    id="pc<%= conversation.id %>" 
    data-pconversation-user-name="<%= @recipient.name %>" 
    data-turbo-permanent>
  <div class="card message-card mb-3" data-pconversation-id="<%= conversation.id %>">
    <%= render 'private/conversations/conversation/heading', conversation: conversation %>
    <div class="card-body my_body p-3 bg-light">
      <div class="messages-list mb-3" style="max-height: 300px; overflow-y: auto;">
        <%= render 'private/conversations/conversation/messages_list', conversation: conversation %>
      </div>
      <%= render 'private/conversations/conversation/new_message_form', conversation: conversation, user: user %>
    </div>
  </div>
</li>
<!-- conversation-window -->
<script>
  document.addEventListener("turbo:load", function() {
    let chatWindowsCount = document.querySelectorAll('.conversation-window').length;

    // if the last visible chat window is not set and conversation windows exist
    // set the last_visible_chat_window variable
    if (gon.last_visible_chat_window === null && chatWindowsCount > 0) {
      gon.last_visible_chat_window = chatWindowsCount;
    }

    // if gon.hidden_chats doesn't exist, set its value
    if (gon.hidden_chats === null) {
      gon.hidden_chats = 0;
    }

    window.addEventListener('resize', hideShowChatWindow);

    positionChatWindows();
    hideShowChatWindow();
  });

  function positionChatWindows() {
    console.log('hi from positionChatWindows');
    let chatWindowsCount = document.querySelectorAll('.conversation-window').length;

    // if a new conversation window was added,
    // set it as the last visible conversation window
    // so the hideShowChatWindow function can hide or show it,
    // depending on the viewport's width
    if (gon.hidden_chats + gon.last_visible_chat_window !== chatWindowsCount) {
      if (gon.hidden_chats === 0) {
        gon.last_visible_chat_window = chatWindowsCount;
      }
    }

    // when a new chat window is added, position it to the most left of the list
    for (let i = 0; i < chatWindowsCount; i++) {
      const rightPosition = i * 410;
      const chatWindow = document.querySelector(`.conversation-window:nth-of-type(${i + 1})`);
      chatWindow.style.right = `${rightPosition}px`;
    }
  }

  // Hides last conversation window whenever it is close to viewport's left side
  function hideShowChatWindow() {
    console.log('hi from hideShowChatWindow');
    // if there are no conversation windows, stop the function
    if (document.querySelectorAll('.conversation-window').length < 1) {
      return;
    }

    // get an offset of the most left conversation window
    const offset = document.querySelector(`.conversation-window:nth-of-type(${gon.last_visible_chat_window})`).getBoundingClientRect();

    // if the left offset of the conversation window is less than 50,
    // hide this conversation window
    if (offset.left < 50 && gon.last_visible_chat_window !== 1) {
      document.querySelector(`.conversation-window:nth-of-type(${gon.last_visible_chat_window})`)
        .style.display = 'none';
      gon.hidden_chats++;
      gon.last_visible_chat_window--;
    }

    // if the offset of the most left conversation window is more than 550
    // and there is a hidden conversation, show the hidden conversation
    if (offset.left > 550 && gon.hidden_chats !== 0) {
      gon.hidden_chats--;chatWindow
      gon.last_visible_chat_window++;
      document.querySelector(`.conversation-window:nth-of-type(${gon.last_visible_chat_window})`)
        .style.display = 'initial';
    }
  }
</script>
<script>
  document.addEventListener("turbo:load", function() {
    // When conversation heading is clicked, toggle conversation
    document.body.addEventListener('click', function(e) {
      if (e.target.matches('.conversation-heading, .conversation-heading-full')) {
        e.preventDefault();
        const panel = e.target.closest('.conversation');
        const panelBody = panel.querySelector('.card-body');
        // Toggle the panel body visibility
        if (panelBody) {
          // Use the `toggle` method to toggle the visibility with animation (using CSS transition)
          panelBody.style.display = panelBody.style.display === 'none' ? 'block' : 'none';
        }
      }

    });
  });
</script>
<style>
  .my_body {
  position: relative;
  padding: 0 0 5px 0;
  }

  /* Overall conversation window styling */
  /* General container for conversation window */
  .conversation-window, .new_chat_window {
  position: fixed;
  bottom: 20px; /* Space from the bottom of the screen */
  right: 20px;  /* Space from the right side */
  min-width: 350px;
  max-width: 400px;
  list-style: none;
  z-index: 1050;
  opacity: 0.95; /* Optional: Slight transparency for modern look */
  transition: transform 0.3s ease-in-out;
  margin-bottom: 10px; /* Space between each card */
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* Add shadow for better visibility */
  border-radius: 10px; /* Rounded corners for a more modern feel */
  }

  /* Ensure new windows are stacked with no overlap */
  .conversation-window.active, .new_chat_window.active {
  transform: translateY(-10px); /* Optional: Hover effect to raise the card */
  }

  /* Remove border on the card itself */
  .message-card {
  margin: 0;
  border: none;
  transition: transform 0.3s ease-in-out;
  }

  /* Scrollable area for messages */
  .messages-list {
  z-index: 1;
  max-height: 300px;
  overflow-y: auto; /* Scroll when content exceeds max-height */
  padding: 0;
  margin-bottom: 10px; /* Space between messages and the bottom */
  }

  /* Styling for individual messages */
  .message-received, .message-sent {
  max-width: 300px;
  word-wrap: break-word; /* Prevent text overflow */
  z-index: 1;
  border-radius: 5px;
  }

  .message-sent {
  position: relative;
  background-color: white;
  border: 1px solid rgba(0, 0, 0, 0.5);
  padding: 10px;
  margin: 5px 5px 5px 50px;
  float: right;
  }

  .message-received {
  background-color: #f0f0f0; /* Light background for received messages */
  border-color: #EEEEEE;
  margin: 5px 50px 5px 5px;
  padding: 10px;
  float: left;
  }

  /* Conversation heading - header part of the window */
  .conversation-heading, .conversation-heading-full, .new_chat_window {
  background-color:rgb(72, 72, 72); /* Use a solid color for header */
  color: white;
  height: 40px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 15px;
  border-radius: 10px 10px 0 0; /* Rounded top corners */
  }

  /* Close, add people, and other action buttons */
  .close-conversation, .add-people-to-chat, .add-user-to-contacts {
  color: white;
  width: 40px;
  height: 40px;
  font-size: 20px;
  border: none;
  background-color: #007bff;
  text-align: center;
  vertical-align: middle;
  line-height: 40px;
  font-weight: bold;
  cursor: pointer;
  }

  .close-conversation {
  transition: background-color 0.2s ease-in-out;
  }

  .close-conversation:hover {
  background-color: white;
  color: #007bff;
  }

  /* Text area styles for sending messages */
  .send-private-message, .send-group-message {
  textarea {
    border-radius: 0;
    border: none;
    border-top: 1px solid rgba(0, 0, 0, 0.2);
    width: 100%;
    padding: 10px;
    box-sizing: border-box; /* Prevent overflow */
  }
  }

  /* Hide loading SVG */
  .loading_svg {
  display: none;
  text-align: center;
  }

  /* Load more messages */
  .load-more-messages {
  display: none;
  }

  .loading-more-messages {
  font-size: 20px;
  padding: 10px 0;
  text-align: center;
  }

  /* Send message button */
  .send-message {
  display: none;
  }

  /* Prevent resizing of textareas */
  textarea {
  resize: none;
  }

  /* Message date separator */
  .messages-date {
  width: 100%;
  text-align: center;
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  line-height: 1px;
  margin: 20px 0;
  }

  .messages-date span {
  background: #fff;
  padding: 0 10px;
  }

  /* Optional: Add hover effect for the message card */
  .message-card:hover {
  transform: translateY(-10px); /* Optional: Hover effect to raise the card */
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2); /* Increase shadow on hover */
  }

  /* Panel heading style */
  .panel-heading {
  border-radius: 0;
  }

  /* General styling for sent/received messages in the list */
  .message-card .panel-body {
  padding: 0;
  background-color: #fff;
  }

  textarea {
  border: 1px solid #ccc;
  padding: 8px;
  width: 100%;
  border-radius: 5px;
  font-size: 14px;
  outline: none;
  margin-top: 10px;
  }

  /* Responsive media query for smaller screens */
  @media (max-width: 768px) {
  .conversation-window, .new_chat_window {
    min-width: 300px;
    max-width: 350px;
  }
  }
</style>